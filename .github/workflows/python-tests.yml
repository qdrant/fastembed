name: Tests

on:
  push:
    branches: [ speedup-ci ] # master, main, gpu
  # pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:

    strategy:
      matrix:
        python-version:
          - '3.9.x'
          - '3.10.x'
          - '3.11.x'
          - '3.12.x'
          - '3.13.x'
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    runs-on: ${{ matrix.os }}

    name: Python ${{ matrix.python-version }} on ${{ matrix.os }} test

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
        
      - name: Install dependencies
        run: |
          python -m pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi --without dev,docs
      
      - name: Set Model Cache Directory
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "MODEL_CACHE_DIR=$LOCALAPPDATA\\Temp\\fastembed_cache" >> $GITHUB_ENV
          else
            echo "MODEL_CACHE_DIR=/tmp/fastembed_cache" >> $GITHUB_ENV
          fi
        shell: bash
      
      - name: Cache Model Files
        uses: actions/cache@v3
        with:
          path: ${{ env.MODEL_CACHE_DIR }}
          key: model-cache-${{ runner.os }}-${{ hashFiles('tests/**') }}

      - name: Run pytest
        run: |
          poetry run pytest tests/test_text_multitask_embeddings.py
      
      - name: List Cached Models (Windows)
        if: runner.os == 'Windows'
        run: dir C:\Users\runneradmin\AppData\Local\Temp\fastembed_cache
        shell: cmd
        
      - name: List Cached Models (Linux/macOS)
        if: runner.os != 'Windows'
        run: ls -lah /tmp/fastembed_cache
        shell: bash